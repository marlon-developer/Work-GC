
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import javax.swing.ImageIcon;


public class Principal extends javax.swing.JFrame {


    public Principal() {
        initComponents();
        
        //cria uma imagem RGB de 400x400
        BufferedImage buffer = new BufferedImage(400, 400, BufferedImage.TYPE_INT_RGB);
        //extrai o objeto Graphics2D dela, pois é através dele que desenhamos
        Graphics2D g = buffer.createGraphics();
        Graphics2D g2 = buffer.createGraphics();
        Graphics2D g3 = buffer.createGraphics();
        Graphics2D g4 = buffer.createGraphics();
      
        //setamos a cor atual do "pincel" como branco
        g.setColor(Color.WHITE);
        //pintamos um retangulo branco que vai da posição (0,0) até a posição (400,400), preenchendo toda a imagem
        g.fillRect(0, 0, 400, 400);
        
        //setamos a cor atual do "pincel" como preto
        g.setColor(Color.black);
        g2.setColor(Color.blue);
        g3.setColor(Color.red);
        g4.setColor(Color.green);

        //Desenhando o Cubo
        //Quadrado 1
        g.drawLine(100, 100, 100, 200);
        g2.drawLine(200, 200, 100, 200);
        g3.drawLine(200, 100, 100, 100);
        g4.drawLine(200, 200, 200, 100);
        
        //Quadrado 2
        g.drawLine(150, 150, 150, 250);
        g2.drawLine(250, 250, 150, 250);
        g3.drawLine(250, 150, 150, 150);
        g4.drawLine(250, 250, 250, 150);
        
        
        //Unir Cubos
        g.drawLine(100, 100, 150, 150);
        g4.drawLine(200, 100, 300, 200);
        g2.drawLine(200, 200, 300, 300);
        g.drawLine(100, 200, 200, 300);
        
   
        
        
        //colocamos a imagem do buffer no jLabel da interface gráfica
        jLabel1.setIcon(new ImageIcon(buffer));
        
        
        
    }
    
    public void paintComponent( Graphics g ){
        //super.paintComponent(g);

        g.drawRect(getWidth()/10 , getHeight()/10,100,100);
        g.drawRect( (getWidth()/10) + 50, (getHeight()/10) + 50, 100, 100);

        g.drawLine(getWidth()/10, getHeight()/10, (getWidth()/10) + 50, (getHeight()/10) + 50);
        g.drawLine(getWidth()/10, (getHeight()/10) + 100, (getWidth()/10) + 50, (getHeight()/10) + 50 + 100);
        g.drawLine( (getWidth()/10) + 100, getHeight()/10, (getWidth()/10) + 50 + 100, (getHeight()/10) + 50);
        g.drawLine(  (getWidth()/10) + 100, (getHeight()/10) + 100, (getWidth()/10) + 100 + 50, (getHeight()/10) + 100 + 50);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Imagem Vai Aqui");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(311, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(275, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
